<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wm.bcgame.dao.UserCoinDao">
    <resultMap id="UserCoin" type="com.wm.bcgame.model.UserCoin">
		<id property="id" column="id" jdbcType="NUMERIC" />
		<result property= "userId" column="user_id" jdbcType="NUMERIC" />
		<result property= "coinType" column="coin_type" jdbcType="NUMERIC" />
		<result property= "num" column="num" jdbcType="NUMERIC" />
		<result property= "amount" column="amount" jdbcType="NUMERIC" />
		<result property= "numLock" column="num_lock" jdbcType="NUMERIC" />
		<result property= "coinId" column="coin_id" jdbcType="NUMERIC" />
		<result property= "disabled" column="disabled" jdbcType="NUMERIC" />
		<result property= "createTime" column="create_time" jdbcType="TIMESTAMP" />
		<result property= "createBy" column="create_by" jdbcType="NUMERIC" />
		<result property= "lastModifiedBy" column="last_modified_by" jdbcType="NUMERIC" />
		<result property= "lastModifiedTime" column="last_modified_time" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="whereId">
        id=#{id}
    </sql>

    <sql id="columns">
            id,
            user_id,
            coin_type,
            num,
            amount,
            num_lock,
            coin_id,
            disabled,
            create_time,
            create_by,
            last_modified_by,
            last_modified_time
    </sql>

    <sql id="dynamicWhere">
        <where>
       	<if test="id != null"> AND id like '%${id}%' </if>
       	<if test="userId != null"> AND user_id like '%${userId}%' </if>
       	<if test="coinType != null"> AND coin_type like '%${coinType}%' </if>
       	<if test="num != null"> AND num like '%${num}%' </if>
       	<if test="amount != null"> AND amount like '%${amount}%' </if>
       	<if test="numLock != null"> AND num_lock like '%${numLock}%' </if>
       	<if test="coinId != null"> AND coin_id like '%${coinId}%' </if>
       	<if test="disabled != null"> AND disabled like '%${disabled}%' </if>
       	<if test="createTime != null"> AND create_time = #{createTime}</if>
       	<if test="createBy != null"> AND create_by like '%${createBy}%' </if>
       	<if test="lastModifiedBy != null"> AND last_modified_by like '%${lastModifiedBy}%' </if>
       	<if test="lastModifiedTime != null"> AND last_modified_time = #{lastModifiedTime}</if>
        </where>
    </sql>

    <sql id="oneWhere">
        <where>
            <if test="id != null"> AND id = #{id}</if>
            <if test="userId != null"> AND user_id = #{userId}</if>
            <if test="coinType != null"> AND coin_type = #{coinType}</if>
            <if test="num != null"> AND num = #{num}</if>
            <if test="amount != null"> AND amount = #{amount}</if>
            <if test="numLock != null"> AND num_lock = #{numLock}</if>
            <if test="coinId != null"> AND coin_id = #{coinId}</if>
            <if test="disabled != null"> AND disabled = #{disabled}</if>
            <if test="createTime != null"> AND create_time = #{createTime}</if>
            <if test="createBy != null"> AND create_by = #{createBy}</if>
            <if test="lastModifiedBy != null"> AND last_modified_by = #{lastModifiedBy}</if>
            <if test="lastModifiedTime != null"> AND last_modified_time = #{lastModifiedTime}</if>
        </where>
    </sql>

    <insert id="create" parameterType="com.wm.bcgame.model.UserCoin">
        INSERT INTO t_user_coin
        (<include refid="columns"/>)
        VALUES(
                #{id,jdbcType=NUMERIC},
                #{userId,jdbcType=NUMERIC},
                #{coinType,jdbcType=NUMERIC},
                #{num,jdbcType=NUMERIC},
                #{amount,jdbcType=NUMERIC},
                #{numLock,jdbcType=NUMERIC},
                #{coinId,jdbcType=NUMERIC},
                #{disabled,jdbcType=NUMERIC},
                #{createTime,jdbcType=TIMESTAMP},
                #{createBy,jdbcType=NUMERIC},
                #{lastModifiedBy,jdbcType=NUMERIC},
                #{lastModifiedTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM t_user_coin
        WHERE
        <include refid="whereId"/>
    </delete>
    <update id="update" parameterType="com.wm.bcgame.model.UserCoin">
        UPDATE t_user_coin SET
                id=#{id,jdbcType=NUMERIC},
                user_id=#{userId,jdbcType=NUMERIC},
                coin_type=#{coinType,jdbcType=NUMERIC},
                num=#{num,jdbcType=NUMERIC},
                amount=#{amount,jdbcType=NUMERIC},
                num_lock=#{numLock,jdbcType=NUMERIC},
                coin_id=#{coinId,jdbcType=NUMERIC},
                disabled=#{disabled,jdbcType=NUMERIC},
                create_time=#{createTime,jdbcType=TIMESTAMP},
                create_by=#{createBy,jdbcType=NUMERIC},
                last_modified_by=#{lastModifiedBy,jdbcType=NUMERIC},
                last_modified_time=#{lastModifiedTime,jdbcType=TIMESTAMP}
        WHERE
        <include refid="whereId"/>
    </update>

    <select id="get" parameterType="java.lang.Long" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
        WHERE
        <include refid="whereId"/>
    </select>

    <select id="query" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
        <include refid="dynamicWhere" />
    </select>
    <select id="search" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
        <include refid="dynamicWhere" />
    </select>
    <select id="getOne" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
        <include refid="oneWhere" />
    </select>

    <select id="getList" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
        <include refid="oneWhere" />
    </select>

    <select id="getAll" resultMap="UserCoin">
        SELECT <include refid="columns"/>
        FROM t_user_coin
    </select>
</mapper>